name: Test code

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # pre-commit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #         cache: "pip"
  #         cache-dependency-path: pyproject.toml
  #     - name: Test pre-commit hooks
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pre-commit
  #         pre-commit run -a
  # test_code_pip:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     max-parallel: 12
  #     matrix:
  #       python-version: ['3.11']
  #       os: [ubuntu-latest]
  #       plugin: [femwell, gmsh, meow, sax, tidy3d, klayout, vlsir]

  #   name: Test ${{ matrix.plugin }} on ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache/pip
  #         key: ${{ hashFiles('pyproject.toml') }}
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         make gmsh
  #         pip install -e .[${{ matrix.plugin }},dev]
  #     - name: Test with pytest
  #       env:
  #         SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
  #         GDSFACTORY_DISPLAY_TYPE: klayout
  #       run: pytest gplugins/${{ matrix.plugin }}
  # test_code_conda:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: conda-incubator/setup-miniconda@v2
  #       with:
  #         python-version: '3.10'
  #         mamba-version: "*"
  #         conda-version: '23.7.4'
  #         channels: conda-forge,defaults
  #         channel-priority: true
  #         activate-environment: anaconda-client-env
  #     - name: Add conda to system path
  #       run: |
  #         echo $CONDA/bin >> $GITHUB_PATH
  #     - name: Install dependencies
  #       run: |
  #         pip install -e .[dev]
  #     - name: Test with pytest
  #       run: |
  #         make meep
  #         pytest gplugins/gmeep gplugins/modes
  # test_non_pip:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     max-parallel: 2
  #     matrix:
  #       os: [ubuntu-latest]
  #       plugin: [elmer]
  #   name: Test ${{ matrix.plugin }} on ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache/pip
  #         key: ${{ hashFiles('pyproject.toml') }}
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.11
  #     - name: Install dependencies
  #       run: |
  #         make gmsh
  #         make ${{ matrix.plugin }}
  #         pip install -e .[dev,gmsh]
  #     - name: Test with pytest
  #       env:
  #         GDSFACTORY_DISPLAY_TYPE: klayout
  #       run: pytest gplugins/${{ matrix.plugin }}
  # test_code_coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: conda-incubator/setup-miniconda@v2
  #       with:
  #         python-version: '3.11'
  #         mamba-version: "*"
  #         conda-version: '23.7.4'
  #         channels: conda-forge,defaults
  #         channel-priority: true
  #         activate-environment: anaconda-client-env
  #     - name: Add conda to system path
  #       run: |
  #         echo $CONDA/bin >> $GITHUB_PATH
  #     - name: Install dependencies
  #       run: |
  #         make dev
  #         pip freeze > requirements.txt
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: requirements
  #         path: requirements.txt
  #     - name: Test with pytest
  #       env:
  #         SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
  #         GDSFACTORY_DISPLAY_TYPE: klayout
  #       run: |
  #         make cov
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         fail_ci_if_error: false
  test_docs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        notebook:
          - file: notebooks/ray_optimiser
          - file: notebooks/pso
          - file: notebooks/meshing_01_intro
          - file: notebooks/meshing_02_2D_xy_mesh
          - file: notebooks/meshing_03_2D_uz_mesh
          - file: notebooks/meshing_04_refinement
          - file: notebooks/meshing_05_3D
          - file: notebooks/femwell_02_heater
          - file: notebooks/devsim_01_pin_waveguide
          - file: notebooks/tcad_02_analytical_process
          - file: notebooks/tcad_03_numerical_implantation
          - file: notebooks/elmer_01_electrostatic
          - file: notebooks/palace_01_electrostatic
          - file: notebooks/palace_02_fullwave
          - file: notebooks/femwell_01_modes
          - file: notebooks/tidy3d_01_tidy3d_modes
          - file: notebooks/mpb_001_mpb_waveguide
          - file: notebooks/meow_01
          - file: notebooks/tidy3d_00_tidy3d
          - file: notebooks/fdtdz_01.py
          - file: notebooks/meep_01_sparameters
          - file: notebooks/meep_02_gratings
          - file: notebooks/meep_03_fields
          - file: notebooks/lumerical_1_fdtd_sparameters
          - file: notebooks/sax_01_sax
          - file: notebooks/sax_02_model_extraction
          - file: notebooks/sax_03_variability_analysis
          - file: notebooks/lumerical_2_interconnect
          - file: notebooks/vlsir_netlist
          - file: notebooks/20_schematic_driven_layout
          - file: notebooks/klayout_dataprep
          - file: notebooks/klayout_drc
          - file: notebooks/11_get_netlist
          - file: notebooks/11_get_netlist_spice
          - file: notebooks/path_length_analysis.py
          - file: notebooks/workflow_1_mzi
          - file: notebooks/workflow_2_ring
          - file: notebooks/workflow_3_cascaded_mzi
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gdsfactory/
          key: 0.0.1
          restore-keys: 0.0.1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.10"
          mamba-version: "*"
          conda-version: "23.7.4"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          make dev
      - name: Test documentation
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: |
          jupytext docs/${{ matrix.notebook }}.py --to ipynb
          # papermill docs/${{ matrix.notebook }}.ipynb docs/${{ matrix.notebook }}.ipynb
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          name: docs
          path: docs/${{ matrix.notebook}}.ipynb
          retention-days: 1
  test_docs_combine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ hashFiles('pyproject.toml') }}
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: actions/download-artifact@v3
        with:
          name: mask
      - name: Install dependencies
        run: |
          make dev
          make docs
      - name: Expose docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/_build/html/
