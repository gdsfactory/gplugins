name: Test code

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

  test_code:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        plugin: [femwell, gmsh, meow, sax, tidy3d, klayout, vlsir]
        os: [ubuntu-latest]
        python-version: [3.12]
        exclude:
          - plugin: femwell
            os: macos-latest
          - plugin: femwell
            os: windows-latest
          - plugin: sax
            python-version: 3.13

    name: Test ${{ matrix.plugin }} ${{ matrix.os }} ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install -y libglu1-mesa
      - name: Install dependencies
        run: |
          uv venv -p ${{ matrix.python-version }}
          uv pip install .[${{ matrix.plugin }},dev] setuptools
          make test-data
      - name: Test with pytest
        run: |
          uv run pytest gplugins/${{ matrix.plugin }}

  test_code_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install libglu1-mesa
        run: |
          sudo apt-get install -y libglu1-mesa
      - name: Install dependencies
        run: |
          make install test-data
      - name: Test with pytest
        run: |
          make cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
