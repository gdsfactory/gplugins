name: Test code

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Test pre-commit hooks
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit run -a
  test_code_pip:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        python-version: ['3.11']
        os: [ubuntu-latest]
        plugin: [femwell, gmsh, meow, sax, tidy3d, klayout, vlsir]

    name: Test ${{ matrix.plugin }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ hashFiles('pyproject.toml') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make gmsh
          pip install -e .[${{ matrix.plugin }},dev]
      - name: Test with pytest
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: pytest gplugins/${{ matrix.plugin }}
  test_code_conda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: '3.10'
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          pip install -e .[dev]
      - name: Test with pytest
        run: |
          make meep
          pytest gplugins/gmeep gplugins/modes
  test_non_pip:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
        plugin: [elmer]
    name: Test ${{ matrix.plugin }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ hashFiles('pyproject.toml') }}
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          make gmsh
          make ${{ matrix.plugin }}
          pip install -e .[dev,gmsh]
      - name: Test with pytest
        env:
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: pytest gplugins/${{ matrix.plugin }}
  test_code_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: '3.11'
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          make dev
          pip freeze > requirements.txt
      - uses: actions/upload-artifact@v3
        with:
          name: requirements
          path: requirements.txt
      - name: Test with pytest
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: |
          make cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
  test_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gdsfactory/
          key: 0.0.1
          restore-keys: 0.0.1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: '3.10'
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          make dev
      - name: Test documentation
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: |
          make docs
      - name: Expose docs artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: docs
          path: docs/_build/html/
