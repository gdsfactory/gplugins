name: Test code

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Test pre-commit hooks
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit run -a
  test_code_pip:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        python-version: ['3.11']
        os: [ubuntu-latest]
        plugin: [femwell, gmsh, meow, sax, tidy3d, klayout, vlsir]

    name: Test ${{ matrix.plugin }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ hashFiles('pyproject.toml') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make gmsh
          pip install -e .[${{ matrix.plugin }},dev]
      - name: Test with pytest
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: pytest gplugins/${{ matrix.plugin }}
  test_code_conda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: '1.3.1-0'
      - name: Install dependencies
        run: |
          pip install -e .[dev]
      - name: Test with pytest
        run: |
          make meep
          pytest gplugins/gmeep gplugins/modes
  test_non_pip:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
        plugin: [elmer]
    name: Test ${{ matrix.plugin }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ hashFiles('pyproject.toml') }}
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          make gmsh
          make ${{ matrix.plugin }}
          pip install -e .[dev,gmsh]
      - name: Test with pytest
        env:
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: pytest gplugins/${{ matrix.plugin }}
  test_code_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: '1.3.1-0'
      - name: Install dependencies
        run: |
          make dev
          pip freeze > requirements.txt
      - uses: actions/upload-artifact@v3
        with:
          name: requirements
          path: requirements.txt
      - name: Test with pytest
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: |
          make cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
  list-files:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - id: set-matrix
      run: |
        files=$(git ls-files docs/**/*.py | xargs -n 1 basename | sed 's/.py$//' | jq -R -s -c 'split("\n")[:-1]')
        echo "::set-output name=matrix::{\"file\":$files}"
  nb:
    needs: list-files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list-files.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v4
    - name: Handle file
      run: |
        file="${{ matrix.file }}"
        echo "Processing Python file - $file"
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gdsfactory/
    - uses: mamba-org/setup-micromamba@v1
      with:
          micromamba-version: '1.3.1-0'
    - name: Installing the library
      shell: bash -l {0}
      run: |
        make data-download
        make dev plugins
    - name: make docs
      env:
        TIDY3D_USER: ${{ secrets.TIDY3D_EMAIL }}
        TIDY3D_PASS: ${{ secrets.TIDY3D_PASSWORD }}
        SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
        DISPLAY: 1.0
        DOCS: True
        GDSFACTORY_DISPLAY_TYPE: klayout
      run: |
        jupytext docs/notebooks/${{ matrix.file }}.py --to ipynb --execute
    - uses: actions/upload-artifact@v3
      with:
        name: notebook
        path: |
          docs/notebooks/${{ matrix.file }}.ipynb
        retention-days: 1
  nb-no-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install jupytext
      - name: Test documentation
        env:
          SIMCLOUD_APIKEY: ${{ secrets.SIMCLOUD_APIKEY }}
          GDSFACTORY_DISPLAY_TYPE: klayout
        run: |
          jupytext docs/notebook_/*.py --to ipynb

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: notebooks
          path: |
            docs/notebook_/*.ipynb
          retention-days: 1
  test_docs_combine:
    runs-on: ubuntu-latest
    needs: [nb-no-run, nb]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gdsfactory/
          key: 0.0.1
          restore-keys: 0.0.1
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: '1.3.1-0'
      - uses: actions/download-artifact@v3
        with:
          name: notebooks
      - name: Install dependencies
        run: |
          make dev meep docs
      - name: Expose docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/_build/html/
